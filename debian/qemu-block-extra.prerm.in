#!/bin/sh
# prerm script for qemu-block-extra
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <prerm> `remove'
#        * <old-prerm> `upgrade' <new-version>
#        * <new-prerm> `failed-upgrade' <old-version>
#        * <conflictor's-prerm> `remove' `in-favour' <package> <new-version>
#        * <deconfigured's-prerm> `deconfigure' `in-favour'
#          <package-being-installed> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    remove)
    ;;

    upgrade|deconfigure)
        # retain .so files for still running qemu instances in /var/run
        # for details see bug LP: #1847361
        mkdir -p /var/run/qemu
        printf "#!/bin/sh\nexit 0\n" > /var/run/qemu/exec
        chmod +x /var/run/qemu/exec || true
        if ! /var/run/qemu/exec 1>/dev/null 2>&1 && ! findmnt --mountpoint /var/run/qemu 1>/dev/null; then
             # not executable and not yet a mount point on its own - create a tmpfs mount
             mount -t tmpfs --source none --target /var/run/qemu --options defaults,nosuid,nodev,exec,mode=755 || true
        fi
        echo "/var/run/qemu is a mountpoint to allow still running qemu binaries of former builds (after package upgrades) to fallback-load modules from there" > /var/run/qemu/README || true
        mkdir -p /var/run/qemu/@PKGVERSION@
        cp /usr/lib/@ARCH@/qemu/block-*.so /var/run/qemu/@PKGVERSION@/
    ;;

    failed-upgrade)
    ;;

    *)
        echo "prerm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
