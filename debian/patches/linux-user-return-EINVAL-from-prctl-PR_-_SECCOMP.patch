From patchwork Fri Nov  3 12:07:03 2017
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Subject: linux-user: return EINVAL from prctl(PR_*_SECCOMP)
X-Patchwork-Submitter: James Cowgill <james.cowgill@mips.com>
X-Patchwork-Id: 833892
Message-Id: <20171103120703.15749-1-james.cowgill@mips.com>
To: Riku Voipio <riku.voipio@iki.fi>
Cc: James Cowgill <james.cowgill@mips.com>,
 Laurent Vivier <laurent@vivier.eu>, qemu-devel@nongnu.org
Date: Fri, 3 Nov 2017 12:07:03 +0000
From: James Cowgill <james.cowgill@mips.com>
List-Id: <qemu-devel.nongnu.org>

If an application tries to install a seccomp filter using
prctl(PR_SET_SECCOMP), the filter is likely for the target instead of the host
architecture. This will probably cause qemu to be immediately killed when it
executes another syscall.

Prevent this from happening by returning EINVAL from both seccomp prctl
calls. This is the error returned by the kernel when seccomp support is
disabled.

Fixes: https://bugs.launchpad.net/qemu/+bug/1726394
Signed-off-by: James Cowgill <james.cowgill@mips.com>
Reviewed-by: Laurent Vivier <laurent@vivier.eu>
---
 linux-user/syscall.c | 4 ++++
 1 file changed, 4 insertions(+)

--- a/linux-user/syscall.c
+++ b/linux-user/syscall.c
@@ -10478,6 +10478,10 @@ abi_long do_syscall(void *cpu_env, int n
             break;
         }
 #endif
+        case PR_GET_SECCOMP:
+        case PR_SET_SECCOMP:
+            ret = -TARGET_EINVAL;
+            break;
         default:
             /* Most prctl options have no pointer arguments */
             ret = get_errno(prctl(arg1, arg2, arg3, arg4, arg5));
