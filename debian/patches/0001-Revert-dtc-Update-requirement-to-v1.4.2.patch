From db32ec0814d472eb62815af8ac828744a1a4b698 Mon Sep 17 00:00:00 2001
From: Vincent Bernat <vincent@bernat.im>
Date: Fri, 15 Dec 2017 15:55:33 +0100
Subject: [PATCH] Revert "dtc: Update requirement to v1.4.2"

This reverts commit 6e85fce0225f235b11618fe50eaec64c1de2cf3e. And
embed appropriate function. This would fail if we were compiled with
1.4.2.
---
 configure            |  6 +++---
 hw/core/loader-fit.c | 28 ++++++++++++++++++++++++++++
 2 files changed, 31 insertions(+), 3 deletions(-)

Index: qemu-2.11+dfsg/configure
===================================================================
--- qemu-2.11+dfsg.orig/configure
+++ qemu-2.11+dfsg/configure
@@ -3645,11 +3645,11 @@ fi
 if test "$fdt" != "no" ; then
   fdt_libs="-lfdt"
   # explicitly check for libfdt_env.h as it is missing in some stable installs
-  # and test for required functions to make sure we are on a version >= 1.4.2
+  # and test for required functions to make sure we are on a version >= 1.4.0
   cat > $TMPC << EOF
 #include <libfdt.h>
 #include <libfdt_env.h>
-int main(void) { fdt_first_subnode(0, 0); return 0; }
+int main(void) { fdt_get_property_by_offset(0, 0, 0); return 0; }
 EOF
   if compile_prog "" "$fdt_libs" ; then
     # system DTC is good - use it
Index: qemu-2.11+dfsg/hw/core/loader-fit.c
===================================================================
--- qemu-2.11+dfsg.orig/hw/core/loader-fit.c
+++ qemu-2.11+dfsg/hw/core/loader-fit.c
@@ -250,6 +250,34 @@ out:
     return ret;
 }
 
+int fdt_first_subnode(const void *fdt, int offset)
+{
+	int depth = 0;
+
+	offset = fdt_next_node(fdt, offset, &depth);
+	if (offset < 0 || depth != 1)
+		return -FDT_ERR_NOTFOUND;
+
+	return offset;
+}
+
+int fdt_next_subnode(const void *fdt, int offset)
+{
+	int depth = 1;
+
+	/*
+	 * With respect to the parent, the depth of the next subnode will be
+	 * the same as the last.
+	 */
+	do {
+		offset = fdt_next_node(fdt, offset, &depth);
+		if (offset < 0 || depth < 1)
+			return -FDT_ERR_NOTFOUND;
+	} while (depth > 1);
+
+	return offset;
+}
+
 int load_fit(const struct fit_loader *ldr, const char *filename, void *opaque)
 {
     const struct fit_loader_match *match;
